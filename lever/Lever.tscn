[gd_scene load_steps=14 format=2]

[ext_resource path="res://shaders/outline-shader.tres" type="Material" id=1]
[ext_resource path="res://lever/lever_interactable.gd" type="Script" id=2]
[ext_resource path="res://lever/lever.gd" type="Script" id=3]
[ext_resource path="res://lever/lever.png" type="Texture" id=4]
[ext_resource path="res://sounds/lever.wav" type="AudioStream" id=5]
[ext_resource path="res://lever/ab.png" type="Texture" id=6]
[ext_resource path="res://lever/arrow.png" type="Texture" id=7]
[ext_resource path="res://lever/lightningr.png" type="Texture" id=8]

[sub_resource type="RectangleShape2D" id=1]
extents = Vector2( 3.54737, 8 )

[sub_resource type="Animation" id=2]
resource_name = "A-to-N"
tracks/0/type = "value"
tracks/0/path = NodePath("Sprite:frame")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9 ),
"transitions": PoolRealArray( 1, 1, 1, 1, 1, 1, 1 ),
"update": 1,
"values": [ 21, 22, 23, 24, 25, 26, 27 ]
}
tracks/1/type = "audio"
tracks/1/path = NodePath("AudioStreamPlayer2D")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"clips": [ {
"end_offset": 0.0,
"start_offset": 0.0,
"stream": ExtResource( 5 )
} ],
"times": PoolRealArray( 0.8 )
}

[sub_resource type="Animation" id=3]
resource_name = "B-to-N"
tracks/0/type = "value"
tracks/0/path = NodePath("Sprite:frame")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9 ),
"transitions": PoolRealArray( 1, 1, 1, 1, 1, 1, 1 ),
"update": 1,
"values": [ 7, 8, 9, 10, 11, 12, 13 ]
}
tracks/1/type = "audio"
tracks/1/path = NodePath("AudioStreamPlayer2D")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"clips": [ {
"end_offset": 0.0,
"start_offset": 0.0,
"stream": ExtResource( 5 )
} ],
"times": PoolRealArray( 0.8 )
}

[sub_resource type="Animation" id=4]
resource_name = "N-to-A"
tracks/0/type = "value"
tracks/0/path = NodePath("Sprite:frame")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7 ),
"transitions": PoolRealArray( 1, 1, 1, 1, 1, 1, 1, 1 ),
"update": 1,
"values": [ 14, 15, 16, 17, 18, 19, 20, 21 ]
}
tracks/1/type = "audio"
tracks/1/path = NodePath("AudioStreamPlayer2D")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"clips": [ {
"end_offset": 0.0,
"start_offset": 0.0,
"stream": ExtResource( 5 )
} ],
"times": PoolRealArray( 0.5 )
}

[sub_resource type="Animation" id=5]
tracks/0/type = "value"
tracks/0/path = NodePath("Sprite:frame")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7 ),
"transitions": PoolRealArray( 1, 1, 1, 1, 1, 1, 1, 1 ),
"update": 1,
"values": [ 0, 1, 2, 3, 4, 5, 6, 7 ]
}
tracks/1/type = "audio"
tracks/1/path = NodePath("AudioStreamPlayer2D")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"clips": [ {
"end_offset": 0.0,
"start_offset": 0.0,
"stream": ExtResource( 5 )
} ],
"times": PoolRealArray( 0.5 )
}

[node name="Lever" type="StaticBody2D"]
script = ExtResource( 3 )

[node name="LeverA" type="StaticBody2D" parent="."]
position = Vector2( -7, 3 )
collision_layer = 2
collision_mask = 0
script = ExtResource( 2 )

[node name="CollisionShape2D" type="CollisionShape2D" parent="LeverA"]
position = Vector2( 2, -4 )
shape = SubResource( 1 )

[node name="InteractableSprite" type="Sprite" parent="LeverA"]
position = Vector2( 6.90512, -17.3262 )
texture = ExtResource( 7 )

[node name="Sprite" type="Sprite" parent="LeverA"]
position = Vector2( -4, 3 )
scale = Vector2( 0.5, 0.5 )
texture = ExtResource( 6 )
hframes = 2

[node name="LeverB" type="StaticBody2D" parent="."]
position = Vector2( -7, 3 )
collision_layer = 2
collision_mask = 0
script = ExtResource( 2 )

[node name="InteractableSprite" type="Sprite" parent="LeverB"]
position = Vector2( 6.90512, -17.3262 )
texture = ExtResource( 7 )

[node name="CollisionShape2D" type="CollisionShape2D" parent="LeverB"]
position = Vector2( 12, -4 )
shape = SubResource( 1 )

[node name="Sprite" type="Sprite" parent="LeverB"]
material = ExtResource( 1 )
position = Vector2( 18, 3 )
scale = Vector2( 0.5, 0.5 )
texture = ExtResource( 6 )
hframes = 2
frame = 1

[node name="Sprite" type="Sprite" parent="."]
material = ExtResource( 1 )
position = Vector2( -24, 21 )
texture = ExtResource( 4 )
offset = Vector2( 23.962, -20.9611 )
hframes = 28

[node name="CollisionShape2D" type="CollisionPolygon2D" parent="."]
polygon = PoolVector2Array( -2, 1, -6, 2, -7, 7, 7, 7, 6, 2, 2, 1 )

[node name="AnimationPlayer" type="AnimationPlayer" parent="."]
anims/A-to-N = SubResource( 2 )
anims/B-to-N = SubResource( 3 )
anims/N-to-A = SubResource( 4 )
anims/N-to-B = SubResource( 5 )

[node name="AudioStreamPlayer2D" type="AudioStreamPlayer2D" parent="."]
stream = ExtResource( 5 )

[node name="ParticlesA" type="CPUParticles2D" parent="."]
position = Vector2( -14.8934, 5.65686 )
emitting = false
lifetime = 0.8
one_shot = true
texture = ExtResource( 8 )
emission_shape = 1
emission_sphere_radius = 6.0
direction = Vector2( 0, 1 )
gravity = Vector2( 0, 4 )
initial_velocity = 1.0
angle = 263.3
angle_random = 0.5
scale_amount = 0.3
color = Color( 0.921569, 1, 0, 1 )
hue_variation = -0.11

[node name="ParticlesB" type="CPUParticles2D" parent="."]
position = Vector2( 15.0702, 5.65686 )
emitting = false
lifetime = 0.8
one_shot = true
texture = ExtResource( 8 )
emission_shape = 1
emission_sphere_radius = 6.0
direction = Vector2( 0, 1 )
gravity = Vector2( 0, 4 )
initial_velocity = 1.0
angle = 263.3
angle_random = 0.5
scale_amount = 0.3
color = Color( 0.921569, 1, 0, 1 )
hue_variation = -0.11

[connection signal="lever_pull" from="LeverA" to="." method="_on_LeverA_lever_pull"]
[connection signal="lever_pull" from="LeverB" to="." method="_on_LeverB_lever_pull"]
